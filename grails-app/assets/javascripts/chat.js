// Generated by CoffeeScript 1.10.0
(function() {
  var onConnect, onDisconnect, onReceiveByUser, onReceiveChatRoom, onReceiveResult, stompClient;

  stompClient = {};

  $('#datetimepickerInline').datetimepicker({
    inline: true,
    locale: 'ja',
    showTodayButton: true,
    format: 'yyyy-MM-dd'
  });

  $('#datetimepickerInline').on('dp.change', function(event) {
    return console.log('DateTimePicker: ' + moment(event.date).format('YYYY-MM-DD'));
  });

  setInterval(function() {
    return $('#currentTime').text(moment().format('MM/DD HH:mm:ss'));
  }, 1000);

  $('#userName').on('keyup', function() {
    return localStorage['userName'] = $('#userName').val();
  });

  $('#chatMessage').on('keyup', function(event) {
    var message;
    if (event.keyCode === 13 && $('#chatMessage').val() !== '') {
      message = {};
      message.text = $('#chatMessage').val();
      message.status = '';
      message.sendto = $('#chatRoomSelected').val();
      message.username = $('#userName').val();
      stompClient.send("/app/message", {}, JSON.stringify(message));
      return $('#chatMessage').val('');
    }
  });

  onReceiveByUser = function(message) {
    return console.log(("@" + ": ") + message.body);
  };

  onReceiveResult = function(message) {
    return console.log('Result: ' + message.body);
  };

  onReceiveChatRoom = function(message) {
    return console.log("Chat Message: " + message.body);
  };

  onConnect = function(frame) {
    $('#wsstatus').removeClass('label-danger');
    $('#wsstatus').addClass('label-info');
    $('#wsstatus').html('OnLine');
    stompClient.send('/app/addUser', {}, $('#userName').val());
    stompClient.subscribe("/topic/result", function(message) {
      return onReceiveResult(message);
    });
    stompClient.subscribe("/topic/" + ($('#userName').val()), function(message) {
      return onReceiveByUser(message);
    });
    return stompClient.subscribe("/topic/" + ($('#chatRoomSelected').val()), function(message) {
      return onReceiveChatRoom(message);
    });
  };

  onDisconnect = function(frame) {
    $('#wsstatus').removeClass('label-info');
    $('#wsstatus').addClass('label-danger');
    return $('#wsstatus').html('OffLine');
  };

  $(document).ready(function() {
    var client, socket;
    if ((localStorage['userName'] != null) && ($('#userName').val() != null)) {
      $('#userName').val(localStorage['userName']);
      socket = new SockJS('/stomp');
      client = Stomp.over(socket);
      client.connect({}, function(frame) {
        stompClient = client;
        stompClient.debug = null;
        return onConnect(frame);
      });
      return client.disconnect({}, function(frame) {
        return onDisconnect(frame);
      });
    }
  });

}).call(this);
