buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        maven { url 'https://repo.grails.org/grails/core' }
        jcenter()
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:${grailsVersion}"
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2'
        classpath 'com.bertramlabs.plugins:coffee-asset-pipeline:2.8.2'
        classpath 'org.grails.plugins:hibernate4:5.0.5'
        //        classpath 'org.grails.plugins:views-gradle:1.0.9'
    }
}

version '0.1.1'
group 'gki'

apply plugin: 'eclipse'
apply plugin: 'idea'
// apply plugin: 'war'
apply plugin: 'org.grails.grails-web'
apply plugin: 'org.grails.grails-gsp'
apply plugin: 'asset-pipeline'
apply plugin: 'codenarc'
apply plugin: 'jacoco'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    maven { url 'https://repo.grails.org/grails/core' }
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:${grailsVersion}"
    }
    applyMavenExclusions false
}

codenarc {
    toolVersion = '0.25.2'
    ignoreFailures = true
    configFile = file('config/codenarc/codenarc.groovy')
    sourceSets = [project.sourceSets.main]
    //    reportFormat = 'xml'
}

jacocoTestReport {
    //  executionData integrationTest, test
}

dependencies {
    compile 'org.springframework.boot:spring-boot-autoconfigure'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-logging'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile 'org.springframework.boot:spring-boot-starter-websocket'
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.grails:grails-core'
    compile 'org.grails:grails-dependencies'
    compile 'org.grails:grails-web-boot'
    compile 'org.grails.plugins:cache'
    compile 'org.grails.plugins:hibernate4'
    compile 'org.grails.plugins:scaffolding'
    compile 'org.grails.plugins:grails-spring-websocket:2.3.0'
    //    compile 'org.grails.plugins:views-json:1.0.9'
    compile 'org.hibernate:hibernate-ehcache'

    console 'org.grails:grails-console'

    profile 'org.grails.profiles:web:3.1.6'

    runtime 'com.bertramlabs.plugins:asset-pipeline-grails:2.8.2'
    runtime 'com.h2database:h2'

    testCompile 'org.grails:grails-plugin-testing'
    testCompile 'org.grails.plugins:geb'

    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.52.0'
    testRuntime 'net.sourceforge.htmlunit:htmlunit:2.21'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
    enableSourceMaps = true
}

grails {
    agent {
        enabled = false
    }
}
